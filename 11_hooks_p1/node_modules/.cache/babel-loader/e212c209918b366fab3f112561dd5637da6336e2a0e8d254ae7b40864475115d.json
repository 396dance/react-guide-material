{"ast":null,"code":"var _jsxFileName = \"/Users/M/Projects/react-guide-material/11_hooks_p1/src/025_practice_useReducer/start/Example.js\",\n  _s = $RefreshSig$();\nimport { useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CALC_OPTIONS = [\"add\", \"minus\", \"divide\", \"multiply\"];\nconst reducer = (state, {\n  type,\n  payload\n}) => {\n  switch (type) {\n    case \"change\":\n      return {\n        ...state,\n        [payload.name]: payload.value\n      };\n    case \"add\":\n      return {\n        ...state,\n        result: state.a + state.b\n      };\n    case \"minus\":\n      return {\n        ...state,\n        result: state.a - state.b\n      };\n    case \"divide\":\n      return {\n        ...state,\n        result: state.a * state.b\n      };\n    case \"multiply\":\n      return {\n        ...state,\n        result: state.a / state.b\n      };\n    default:\n      throw new Error(\"不明なタイプです\");\n  }\n};\nconst Example = () => {\n  _s();\n  const initState = {\n    a: 1,\n    b: 2,\n    result: 3\n  };\n  const [state, dispatch] = useReducer(reducer, initState);\n  const calculate = e => {\n    dispatch({\n      type: e.target.value\n    });\n  };\n  const numChangeHandler = e => {\n    dispatch({\n      type: \"change\",\n      payload: {\n        name: e.target.name,\n        value: parseInt(e.target.value)\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"a:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"a\",\n        value: state.a,\n        onChange: numChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"b:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"b\",\n        value: state.b,\n        onChange: numChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: state.type,\n      onChange: calculate,\n      children: CALC_OPTIONS.map(type => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: type,\n        children: type\n      }, type, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"\\u7D50\\u679C\\uFF1A\", state.result]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Example, \"ivzsx5aR9qRFuEtyOcndflQiQ1Q=\");\n_c = Example;\nexport default Example;\nvar _c;\n$RefreshReg$(_c, \"Example\");","map":{"version":3,"names":["useReducer","jsxDEV","_jsxDEV","Fragment","_Fragment","CALC_OPTIONS","reducer","state","type","payload","name","value","result","a","b","Error","Example","_s","initState","dispatch","calculate","e","target","numChangeHandler","parseInt","children","onChange","fileName","_jsxFileName","lineNumber","columnNumber","map","_c","$RefreshReg$"],"sources":["/Users/M/Projects/react-guide-material/11_hooks_p1/src/025_practice_useReducer/start/Example.js"],"sourcesContent":["import { useReducer } from \"react\";\r\n\r\nconst CALC_OPTIONS = [\"add\", \"minus\", \"divide\", \"multiply\"];\r\n\r\nconst reducer = (state, { type, payload }) => {\r\n  switch (type) {\r\n    case \"change\":\r\n      return { ...state, [payload.name]: payload.value };\r\n    case \"add\":\r\n      return { ...state, result: state.a + state.b };\r\n    case \"minus\":\r\n      return { ...state, result: state.a - state.b };\r\n    case \"divide\":\r\n      return { ...state, result: state.a * state.b };\r\n    case \"multiply\":\r\n      return { ...state, result: state.a / state.b };\r\n    default:\r\n      throw new Error(\"不明なタイプです\");\r\n  }\r\n};\r\n\r\nconst Example = () => {\r\n  const initState = {\r\n    a: 1,\r\n    b: 2,\r\n    result: 3,\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(reducer, initState);\r\n\r\n  const calculate = (e) => {\r\n    dispatch({ type: e.target.value });\r\n  };\r\n\r\n  const numChangeHandler = (e) => {\r\n    dispatch({\r\n      type: \"change\",\r\n      payload: { name: e.target.name, value: parseInt(e.target.value) },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        a:\r\n        <input\r\n          type=\"number\"\r\n          name=\"a\"\r\n          value={state.a}\r\n          onChange={numChangeHandler}\r\n        />\r\n      </div>\r\n      <div>\r\n        b:\r\n        <input\r\n          type=\"number\"\r\n          name=\"b\"\r\n          value={state.b}\r\n          onChange={numChangeHandler}\r\n        />\r\n      </div>\r\n      <select value={state.type} onChange={calculate}>\r\n        {CALC_OPTIONS.map((type) => (\r\n          <option key={type} value={type}>\r\n            {type}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      <h3>結果：{state.result}</h3>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Example;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}